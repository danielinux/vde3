AM_CPPFLAGS = -D_GNU_SOURCE $(VDE_CPPFLAGS) \
  -I$(top_srcdir)/src/include/ -I$(top_srcdir)/src/
AM_LDFLAGS = $(GLIB_LIBS) $(JSONC_LIBS) -levent
AM_CFLAGS = $(GLIB_CFLAGS) $(JSONC_CFLAGS) $(VDE_CFLAGS)

GEN_CHECKER = src/gen_checker.py

# autogenerated sources and wrappers for commands
WRAPPERS_SRC = \
  src/engine_ctrl_commands.c \
  src/engine_hub_commands.c
WRAPPERS_HDR = $(subst .c,.h,$(WRAPPERS_SRC))
WRAPPERS_JSON = $(subst .c,.json,$(WRAPPERS_SRC))

# generate wrappers before other sources
BUILT_SOURCES = $(WRAPPERS_SRC)

CLEANFILES = $(WRAPPERS_SRC) $(WRAPPERS_HDR)

EXTRA_DIST = $(GEN_CHECKER) $(WRAPPERS_JSON)

include_HEADERS = src/include/vde3.h

noinst_HEADERS = \
  $(WRAPPERS_HDR) \
  src/include/vde3/localconnection.h \
  src/include/vde3/common.h \
  src/include/vde3/attributes.h \
  src/include/vde3/signal.h \
  src/include/vde3/packet.h \
  src/include/vde3/component.h \
  src/include/vde3/connection.h \
  src/include/vde3/command.h \
  src/include/vde3/context.h \
  src/include/vde3/module.h

VDE_SRC = \
  $(WRAPPERS_SRC) \
  src/engine_ctrl.c \
  src/engine_hub.c \
  src/context.c \
  src/component.c \
  src/conn_manager.c \
  src/logging.c \
  src/module.c \
  src/transport_vde2.c \
  src/connection.c \
  src/libevent_handler.c \
  src/localconnection.c \
  src/common.c \
  src/signal.c

# autogenerated commands must have a corresponding .json "source"
$(WRAPPERS_SRC): $(WRAPPERS_JSON)
	$(AM_V_GEN)$(PYTHON) $(GEN_CHECKER) -q -o $(top_builddir)/src/ $(subst .c,.json,$@)

bin_PROGRAMS = src/vde_hub src/vde_hub2hub

src_vde_hub_SOURCES = \
  $(VDE_SRC) \
  src/vde_hub.c

src_vde_hub2hub_SOURCES = \
  $(VDE_SRC) \
  src/vde_hub2hub.c
